(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{241:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数据类型："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型："}},[t._v("#")]),t._v(" 数据类型：")]),t._v(" "),s("p",[t._v("基础数据类型5种：布尔 number string null undefined")]),t._v(" "),s("p",[t._v("复杂数据类型1种：object")]),t._v(" "),s("p",[t._v("ES6新增 Symbol表示独一无二的值 初始化不需要使用new操作符")]),t._v(" "),s("h3",{attrs:{id:"数据类型判断："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型判断："}},[t._v("#")]),t._v(" 数据类型判断：")]),t._v(" "),s("p",[t._v("普通数据类型使用：typeof   null和object返回的都是object")]),t._v(" "),s("blockquote",[s("p",[t._v("typeof是一元操作符不是函数")])]),t._v(" "),s("h4",{attrs:{id:"对象进行判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象进行判断"}},[t._v("#")]),t._v(" 对象进行判断")]),t._v(" "),s("h4",{attrs:{id:"数组的判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的判断"}},[t._v("#")]),t._v(" 数组的判断")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Array "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多个iframe使用如下方式")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[object Array]"')]),t._v("\n")])])]),s("h3",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h4",{attrs:{id:"数组的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的方法"}},[t._v("#")]),t._v(" 数组的方法")]),t._v(" "),s("p",[s("strong",[t._v("push() pop() shift() unshift()  reverse() sort()")]),t._v(" concat() slice() "),s("strong",[t._v("splice()")]),t._v(" indexOf() lastIndexOf() every() filter()  forEach()  map() some() reduce()  reduceRight()")]),t._v(" "),s("h4",{attrs:{id:"数组去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组去重"}},[t._v("#")]),t._v(" 数组去重")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("空数组循环push的方式，一个一个的把原数组push进去。push前indexof判断一下新的值在数组种有没有，没有就push 有就下一个")])]),t._v(" "),s("li",[s("p",[t._v("在原数组上进行去重的操作，对原数组有影响。用splice() 从原系统上一次进行对比，对比的数组项在前面或者后面有的话就删除当前的值，删掉后要吧数组的长度减1")])]),t._v(" "),s("li",[s("p",[t._v("使用对象的属性不能相同的特点去重。")])]),t._v(" "),s("li",[s("p",[t._v("对原数组进行排序，然后循环如果相邻的元素相同就删除")]),t._v(" "),s("p",[t._v("最短的数组去重")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h4",{attrs:{id:"伪数组有哪些？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪数组有哪些？"}},[t._v("#")]),t._v(" 伪数组有哪些？")]),t._v(" "),s("ol",[s("li",[t._v("DOM选择器选择的节点列表")]),t._v(" "),s("li",[t._v("函数中的 argument对象")]),t._v(" "),s("li",[t._v("jq选择器选择的jq对象")])]),t._v(" "),s("h4",{attrs:{id:"伪数组如何转换为数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪数组如何转换为数组"}},[t._v("#")]),t._v(" 伪数组如何转换为数组")]),t._v(" "),s("ol",[s("li",[t._v("新建一个数组把伪数组的每一项循环放入到新数组中。")]),t._v(" "),s("li",[t._v("Array.prototype.slice.call(伪数组) 或者 [].slice.call(伪数组)")])]),t._v(" "),s("h3",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("h4",{attrs:{id:"字符串的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的方法"}},[t._v("#")]),t._v(" 字符串的方法")]),t._v(" "),s("p",[t._v("charAt()  concat() charCodeAt()  indexOf() lastIndexOf() split() slice()  substring() substr() toLowerCase()  toUpperCase() trim()")]),t._v(" "),s("p",[t._v("slice()  substring() substr() 的区别")]),t._v(" "),s("h3",{attrs:{id:"数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字"}},[t._v("#")]),t._v(" 数字")]),t._v(" "),s("p",[t._v("如何判断一个东西是否是NaN？")]),t._v(" "),s("p",[t._v("isNaN() 不是用来判断是否是NaN，而是用来判断你传进去的参数是否可以转换为数字。")]),t._v(" "),s("p",[t._v("NaN不全等于自身。ES6的is() 方法。")]),t._v(" "),s("h3",{attrs:{id:"布尔类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔类型"}},[t._v("#")]),t._v(" 布尔类型")]),t._v(" "),s("p",[t._v("js中哪些类型转化为布尔类型为false？")]),t._v(" "),s("p",[t._v('undefined 0 -0 null "" NaN')]),t._v(" "),s("p",[t._v("任何对象转化为布尔类型都是true。 new Boolean(false) 转化为布尔类型还是true")]),t._v(" "),s("p",[t._v("快速的将将数据转化为布尔类型 两个!!")]),t._v(" "),s("h2",{attrs:{id:"new操作符的执行过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new操作符的执行过程"}},[t._v("#")]),t._v(" new操作符的执行过程")]),t._v(" "),s("ol",[s("li",[t._v("创建一个空对象")]),t._v(" "),s("li",[t._v("修改this指针指向创建出来的对象")]),t._v(" "),s("li",[t._v("运行构造函数中的所有代码")]),t._v(" "),s("li",[t._v("将创建出来的对象作为返回值进行返回")])]),t._v(" "),s("p",[t._v("使用new操作符没有参数的时候()是可以省略的。")]),t._v(" "),s("p",[t._v("###对构造函数来讲里面的返回值应该是什么样的？")]),t._v(" "),s("p",[t._v("返回值分成几个问题：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("new操作符本身就会创建一个对象然后把他返回一个对象。也就是说new操作符创建出来的一定是一个对象。")]),t._v(" "),s("p",[t._v("如果你在构造函数里面显示的写了一个返回值，即return **。这时会发生什么情况：")]),t._v(" "),s("ul",[s("li",[t._v("返回的值不")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);