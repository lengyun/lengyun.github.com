(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{210:function(t,s,a){"use strict";a.r(s);var e=a(0),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"时间对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间对象"}},[t._v("#")]),t._v(" 时间对象")]),t._v(" "),a("p",[t._v("GMT 时间 格林威治时间")]),t._v(" "),a("p",[t._v("UTC 时间 （Coordinated Universal Time，国际协调时间）")]),t._v(" "),a("p",[t._v("js开始时间：1970 年 1 月 1 日午夜（零时）")]),t._v(" "),a("h2",{attrs:{id:"时间对象创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间对象创建"}},[t._v("#")]),t._v(" 时间对象创建")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基础对象创建")]),t._v(" "),a("ul",[a("li",[t._v("字符字面量 {}")]),t._v(" "),a("li",[t._v("new操作符 new Object()")]),t._v(" "),a("li",[t._v("ES5 方法创建 Object.create(原型,对象描述信息)")])])]),t._v(" "),a("li",[a("p",[t._v("数组对象创建")]),t._v(" "),a("ul",[a("li",[t._v("字符字面量 []")]),t._v(" "),a("li",[t._v("new 操作符 new Array()")])])]),t._v(" "),a("li",[a("p",[t._v("时间对象创建")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("new 操作符")]),t._v(" "),a("p",[t._v("var now = new Date();")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不传参数")]),t._v(" "),a("p",[t._v("当前系统时间")])]),t._v(" "),a("li",[a("p",[t._v("传入一个数字")]),t._v(" "),a("p",[t._v("距离1970 年 1 月 1 日午夜（零时）的毫秒数")])]),t._v(" "),a("li",[a("p",[t._v("传入多个参数")]),t._v(" "),a("p",[t._v("代表年月日时分秒")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Thu Nov 10 2016 00:00:00 GMT+0800 (CST)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 月份从0开始，除了天外都是从0开始")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("其他数据类型")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false null true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Thu Jan 01 1970 08:00:00 GMT+0800 (CST)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Invalid Date 无效时间")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016/10/10"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Mon Oct 10 2016 00:00:00 GMT+0800 (CST)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尽量把字符串转化为对应的时间，能识别数字和英文单词")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"qewqwe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无意义的字符串返回 Invalid Date 无效时间")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("字符串类型创建时间注意事情：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通常表示时间是用：年月日时分秒  在js中用 （月日年）中间可以用空格、逗号、斜杠/。月份是从0开始的。")])]),t._v(" "),a("li",[a("p",[t._v("时间用 ： 冒号分隔")])]),t._v(" "),a("li",[a("p",[t._v("时间和日期不分先后顺序，通常把时间放后面，用空格、逗号、斜杠/分隔，如果时间放前面必须用空格分隔，而且特殊情况会返回不一样。")])]),t._v(" "),a("li",[a("p",[t._v("(年/月/日)形式也可以识别，最好用标准的（月/日/年）形式。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果数字和数字之间是使用连字符的形式进行连接，而且小于10的数字使用补零的方式并且后面没有设置具体的时间。这时就会得到一个不是你想要的时间。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2015-04-15"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Wed Apr 15 2015 08:00:00 GMT+0800 (CST) ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//得到的是早上8点而不是0点")]),t._v("\n")])])])])])])])])]),t._v(" "),a("h2",{attrs:{id:"时间对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间对象的方法"}},[t._v("#")]),t._v(" 时间对象的方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("继承方法")]),t._v(" "),a("p",[t._v("时间对象也是对象的一种继承了对象的三个基础方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("toString()")]),t._v(" "),a("p",[t._v("返回表示时间的字符串，包括时区信息")])]),t._v(" "),a("li",[a("p",[t._v("toLocaleString()")]),t._v(" "),a("p",[t._v("返回表示时间的字符串，不包括时区信息")])]),t._v(" "),a("li",[a("p",[t._v("valueOf()")]),t._v(" "),a("p",[t._v("返回时间对象所对应的毫秒数，把时间对象转化为数字")]),t._v(" "),a("p",[t._v("一元加操作符"),a("code",[t._v("+Date")]),t._v("也可以吧时间对象转化为数字")]),t._v(" "),a("p",[t._v("ES5给为了保持语意统一给时间对象增加了no()方法")]),t._v(" "),a("p",[t._v("关系运算符<>可以对对象进行比较，当你对对象进行比较的时候，系统也会先调用valieOf()方法把它转化为对应的原始类型进行比较。所以"),a("strong",[t._v("时间对象也可以使用<> 号进行比较")]),t._v("。")])])])]),t._v(" "),a("li",[a("p",[t._v("格式化方法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("toDateString()")])]),t._v(" "),a("li",[a("p",[t._v("toTimeString()")])]),t._v(" "),a("li",[a("p",[t._v("toLocaleDateString()")])]),t._v(" "),a("li",[a("p",[t._v("toLocaleTimeString()")]),t._v(" "),a("p",[t._v("基本上没啥用")])]),t._v(" "),a("li",[a("p",[t._v("toUTCString()")]),t._v(" "),a("p",[t._v("返回"),a("strong",[t._v("表示标准时间")]),t._v("的字符串。")]),t._v(" "),a("p",[t._v("cookies设置过期时间")])]),t._v(" "),a("li",[a("p",[t._v("toGMTString()")])])])]),t._v(" "),a("li",[a("p",[t._v("自身方法 33个")]),t._v(" "),a("p",[t._v("去掉get set UTC 剩下9个方法：Time、FullYear、Month、Date、Day、Houts、minutes、Seconds、Milliseconds。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Time  没有UTC方法，")]),t._v(" "),a("p",[t._v("getTime()把时间转为对应的毫秒数。")]),t._v(" "),a("p",[t._v("setTime()以一个毫秒数来设置时间。")])]),t._v(" "),a("li",[a("p",[t._v("FullYear 的set传入是表示年份的四个数字，get获取的也是表示年份的四位数字。")])]),t._v(" "),a("li",[a("p",[t._v("get方法中 只有Date 是从1开始的，其他的事从0开始")])]),t._v(" "),a("li",[a("p",[t._v("set方法中 当你设置一个比他应有的数字还大的数字时候，这时你得到的时间对象会对他前一个单位进行加一操作。")])]),t._v(" "),a("li",[a("p",[t._v("getDate 得到日期  getDay 得到星期几从0开始")])])]),t._v(" "),a("p",[a("strong",[t._v("总结：")])]),t._v(" "),a("p",[t._v("年、月、日、时、分、秒、毫秒 （7个）")]),t._v(" "),a("p",[t._v("每一个对应一个set 和get （14个）")]),t._v(" "),a("p",[t._v("有UTC和没UTC的方法（28）")]),t._v(" "),a("p",[t._v("day()方法没有set方法 （30）")]),t._v(" "),a("p",[t._v("time() 方法没有UTC方法（32）")]),t._v(" "),a("p",[t._v("getTimezoneOffset() 方法 获取时差方法（33）")]),t._v(" "),a("p",[t._v("所有的get方法返回值都是数字")]),t._v(" "),a("p",[t._v("所有的set方法入参都是数字，返回都是时间对象")])])]),t._v(" "),a("h2",{attrs:{id:"补充知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充知识"}},[t._v("#")]),t._v(" 补充知识")]),t._v(" "),a("p",[t._v("把时间对象转化为 对应的毫秒数：")]),t._v(" "),a("p",[a("code",[t._v("var date = new Date")])]),t._v(" "),a("ol",[a("li",[t._v("valueOf()方法 "),a("code",[t._v("date.valueOf()")])]),t._v(" "),a("li",[t._v("getTime()方法 "),a("code",[t._v("date.getTime()")])]),t._v(" "),a("li",[t._v("number()方法  "),a("code",[t._v("Number(date)")])]),t._v(" "),a("li",[t._v("一元操作符+  "),a("code",[t._v("+date")])]),t._v(" "),a("li",[a("code",[t._v("Date.parse(a)")]),t._v(" 效率最慢")])]),t._v(" "),a("p",[t._v("效率比较 valueOf()和 getTime()  》number() 和 一元+  差别不大")])])}),[],!1,null,null,null);s.default=v.exports}}]);