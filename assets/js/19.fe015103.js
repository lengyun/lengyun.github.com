(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{213:function(_,v,t){"use strict";t.r(v);var e=t(0),p=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[_._v("#")]),_._v(" 表达式")]),_._v(" "),t("p",[_._v("表达式就是js中的一个短语，解释器遇到短语后会把它计算出来一个结果，参与运算。我们把这种参与运算的各种短语叫做表达式。")]),_._v(" "),t("p",[_._v("js代码基本是由操作符、表达式构成的。")]),_._v(" "),t("p",[t("strong",[_._v("表达式分类：")])]),_._v(" "),t("ol",[t("li",[_._v("原始表达式")])]),_._v(" "),t("p",[_._v("常量：大写_  pai")]),_._v(" "),t("p",[_._v("变量：")]),_._v(" "),t("p",[_._v("直接量：数字、字符串、正则表达式")]),_._v(" "),t("p",[_._v("关键字：")]),_._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[_._v("初始化表达式")])]),_._v(" "),t("p",[_._v("初始化对象 对象直接量方式 "),t("code",[_._v("{}")])]),_._v(" "),t("p",[_._v("初始化数组  "),t("code",[_._v("[]")])]),_._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("p",[_._v("函数定义表达式")]),_._v(" "),t("p",[t("code",[_._v("function name(){}")])])]),_._v(" "),t("li",[t("p",[_._v("函数调用表达式")]),_._v(" "),t("p",[t("code",[_._v("funName()")])])]),_._v(" "),t("li",[t("p",[_._v("属性访问表达式")]),_._v(" "),t("p",[_._v(". 和 []")])]),_._v(" "),t("li",[t("p",[_._v("对象创建表达式")]),_._v(" "),t("p",[_._v("new 操作符创建对象")])])])])}),[],!1,null,null,null);v.default=p.exports}}]);